basePath: /api/v1
definitions:
  controllers.AcceptInviteReq:
    properties:
      invite_token:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - invite_token
    - name
    - password
    type: object
  controllers.AddSeatReq:
    properties:
      organization_id:
        type: integer
      stripe_subscription_id:
        type: string
      user_id:
        type: integer
    required:
    - stripe_subscription_id
    type: object
  controllers.CreateOrganizationReq:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  controllers.DisableUserRequest:
    properties:
      organization_id:
        type: integer
      user_id:
        type: integer
    required:
    - organization_id
    - user_id
    type: object
  controllers.InviteReq:
    properties:
      email:
        type: string
      organization_id:
        type: integer
      stripe_subscription_id:
        type: string
    required:
    - email
    - organization_id
    - stripe_subscription_id
    type: object
  controllers.RemoveUserReq:
    properties:
      organization_id:
        type: integer
      user_id:
        type: integer
    required:
    - organization_id
    - user_id
    type: object
  controllers.subscriptionRequest:
    properties:
      organization_id:
        type: integer
      payment_method_id:
        type: string
      price_id:
        example: price_1PVoH4Lq8P7MVUmbz4NnEDsW
        type: string
      product_id:
        type: integer
      quantity:
        example: 1
        type: integer
      user_id:
        type: integer
    required:
    - organization_id
    - payment_method_id
    - price_id
    - product_id
    - quantity
    type: object
  form.EmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  form.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  form.InviteUserRequest:
    properties:
      email:
        type: string
      organization_id:
        type: integer
      role:
        type: string
    required:
    - email
    - organization_id
    - role
    type: object
  form.MessageResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact:
    name: Haitham
    url: https://github.com/haitham911/organization-management-app
  description: Type "Bearer" followed by a space and JWT token.
  title: organization management
  version: "1.0"
paths:
  /organization:
    post:
      consumes:
      - application/json
      description: create organization
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateOrganizationReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: create organization
      tags:
      - organizations
  /organizations/subscription-info:
    get:
      consumes:
      - application/json
      description: Retrieve the number of members in an organization and how many
        subscriptions are left
      parameters:
      - description: Organization Id
        in: query
        name: orgId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get the number of members and remaining subscriptions for an organization
      tags:
      - organizations
  /organizations/users:
    get:
      consumes:
      - application/json
      description: Get the Organizations users
      parameters:
      - description: Organization Id
        in: query
        name: orgId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get the Organizations users
      tags:
      - organizations
  /products:
    get:
      consumes:
      - application/json
      description: Get List Products With Prices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get List Products With Prices
      tags:
      - product
  /subscriptions:
    post:
      consumes:
      - application/json
      description: Create subscription
      parameters:
      - description: subscriptionRequest
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/controllers.subscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create subscription
      tags:
      - subscriptions
  /subscriptions/accept-invite:
    post:
      consumes:
      - application/json
      description: Accept an invite and create a user in the organization
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.AcceptInviteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Accept an invite to join the organization
      tags:
      - subscriptions
  /subscriptions/add-seat:
    post:
      consumes:
      - application/json
      description: Add a user seat to an existing subscription with prorated billing
      parameters:
      - description: Add Seat
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/controllers.AddSeatReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Add a seat to the subscription
      tags:
      - subscriptions
  /subscriptions/disable-user:
    post:
      consumes:
      - application/json
      description: Disable a user and remove their seat from the organization without
        deleting the user
      parameters:
      - description: Disable User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.DisableUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Disable a user and remove their seat from the organization
      tags:
      - subscriptions
  /subscriptions/remove-user:
    post:
      consumes:
      - application/json
      description: Remove a user from an organization and update the subscription
      parameters:
      - description: Remove User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RemoveUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Remove a user from the organization
      tags:
      - subscriptions
  /subscriptions/send-invite:
    post:
      consumes:
      - application/json
      description: Send an invite to a user to join the organization
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.InviteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Send an invite to a user
      tags:
      - subscriptions
  /user/complete-signup:
    post:
      consumes:
      - application/json
      description: Complete the signup process using the magic link
      parameters:
      - description: Magic Link Token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/form.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/form.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/form.ErrorResponse'
      summary: Complete the signup process
      tags:
      - users
  /user/login:
    post:
      consumes:
      - application/json
      description: Complete the login process using the magic link
      parameters:
      - description: Magic Link Token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/form.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/form.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/form.ErrorResponse'
      summary: Complete the login process using the magic link
      tags:
      - users
  /user/login-magic-link:
    post:
      consumes:
      - application/json
      description: Login with a magic link sent to the user's email
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/form.EmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/form.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/form.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/form.ErrorResponse'
      summary: Login with a magic link
      tags:
      - users
  /user/signup-magic-link:
    post:
      consumes:
      - application/json
      description: Sign up with a magic link sent to the user's email
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/form.EmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/form.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/form.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/form.ErrorResponse'
      summary: Sign up with a magic link
      tags:
      - users
  /users/{user_id}/roles:
    get:
      consumes:
      - application/json
      description: Get user information with roles in organizations
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/form.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/form.ErrorResponse'
      summary: Get user information with roles in organizations
      tags:
      - users
  /users/invite:
    post:
      consumes:
      - application/json
      description: Invite a user to an organization by sending a magic link to their
        email
      parameters:
      - description: Invite User
        in: body
        name: invite
        required: true
        schema:
          $ref: '#/definitions/form.InviteUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/form.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/form.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/form.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/form.ErrorResponse'
      summary: Invite a user to an organization with role Admin or Member
      tags:
      - users
  /users/profile:
    get:
      description: get logged user from token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/form.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/form.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/form.ErrorResponse'
      security:
      - Bearer: []
      summary: get logged user from token
      tags:
      - users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
